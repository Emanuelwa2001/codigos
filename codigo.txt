from time import sleep
from machine import I2C, Pin, SPI
from utime import ticks_diff, ticks_us
from nrf24l01 import NRF24L01
import network
from ssd1306 import SSD1306_I2C


csn = Pin(5, Pin.OUT) #Pines CSN y CE de la NRF
ce = Pin(17, Pin.OUT)

i2c = I2C(0, sda=Pin(8),scl=Pin(9), freq=100000) #Pines sensor MAX30102	

spi = SPI(0, baudrate=10000000, polarity=0, phase=0, sck=Pin(18), mosi=Pin(19), miso=Pin(16)) # Configuración del bus SPI

nrf = NRF24L01(spi, csn, ce, channel=76, payload_size=16) #Configuracion nrf
address = b'4node'  # Dirección del pipe de transmisión 
nrf.set_power(3)  # Máxima potencia (0 dBm)
nrf.set_data_rate(NRF24L01.RATE_2M)  # Máxima velocidad (2 Mbps)
nrf.open_tx_pipe(address) # Abrir canal de transmisión

# Programa para medir la intensidad de señal WiFi (RSSI)
# Universidad Militar Nueva Granada - Ingeniería en Telecomunicaciones
# jose.rugeles@unimilitar.edu.co


# Configuración OLED

# Configuración WiFi
wifi = network.WLAN(network.STA_IF)
wifi.active(True)
ssid = "---"
password = "---"

# Conexión a la red WiFi
wifi.connect(ssid, password)
while not wifi.isconnected():
    time.sleep(1)

print("Conexión establecida!")
print("Dirección IP:", wifi.ifconfig()[0])

def enviar_mensaje(rssi_average): #Funcion para enviar el mensaje
    try: #Si se puede
        nrf.send(rssi_average)  #Envia el mensaje
        print("Mensaje enviado: ", rssi_average) #Se confirma el envio
        estado = nrf.reg_read(0x07)  #se lee el estado del envio
        print("Estado del registro STATUS: ", bin(estado)) #Se muestra el estado del envio
        leer() #Vuelve a leer datos
        
    except OSError: #Si no se puede enviar 
        print("Error al enviar el mensaje") #Se confirma la imposibilidad de enviar el mensaje

# Bucle principal
while True:
    rssi_values = []
    
    # Toma 10 muestras de RSSI
    for _ in range(10):
        rssi = wifi.status('rssi')
        rssi_values.append(rssi)
        time.sleep(0.2)

    # Calcula el promedio
    rssi_average = sum(rssi_values) / len(rssi_values)
    
    # Visualización OLED
    
    time.sleep(2)
